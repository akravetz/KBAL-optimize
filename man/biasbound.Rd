% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{biasbound}
\alias{biasbound}
\title{Worst-Case Bias Bound due to Incomplete Balance}
\usage{
biasbound(observed, target, svd.out, w, hilbertnorm = 1)
}
\arguments{
\item{observed}{a numeric vector of length equal to the total number of units where sampled units take a value of 1 and population units take a value of 0.}

\item{target}{a numeric vector of length equal to the total number of units where population units take a value of 1 and sample units take a value of 0.}

\item{svd.out}{the list object output from \code{svd()} performed on the kernel matrix.}

\item{w}{numeric vector containing the weight for every corresponding unit. Note that these weights should sum to the total number of units, not to one. They are divided by the number of control or sample and treated or population units internally.}

\item{hilbertnorm}{numeric value of the hilbertnorm. Default value is 1.}
}
\description{
Calculate the upper bound on the bias induced by approximate balance with a given \code{hilbertnorm}. Approximate balance is conducted in \code{kpop()} and uses only the first \code{numdims} dimensions of the singular value decomposition of the kernel matrix to generate weights \code{w} which produce mean balance between control or sampled units and treated or population units. The following function calculates the worse-case bias induced by this approximate balancing with weights \code{w} and a given \code{hilbertnorm.}
}
\examples{
#load and clean data a bit
data(lalonde)
lalonde$nodegr=as.numeric(lalonde$educ<=11)
xvars=c("age","black","educ","hisp","married","re74","re75","nodegr","u74","u75")

#need a kernel matrix to run SVD on and pass in so get that first with makeK
#running makeK with the sampled units as the bases
K = makeK(allx = lalonde[,xvars],
useasbases = as.numeric(1-lalonde$nsw),
b = 2*ncol(lalonde[,xvars]))

#svd on this kernel
svd_pass = svd(K)
#let's use the original weights of 1/number of sampled units, and 1/numer of target units
#this is the default if we pass in w as all 1's
biasbound(observed=(1-lalonde$nsw),
 target=lalonde$nsw,
 svd.out = svd_pass,
 w = rep(1,nrow(lalonde)), hilbertnorm=1)
}
