% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{kbal}
\alias{kbal}
\title{Kernel Balancing}
\usage{
kbal(allx, useasbases = NULL, b = NULL, sampled = NULL,
  sampledinpop = NULL, treatment = NULL, ebal.tol = 1e-06,
  numdims = NULL, minnumdims = NULL, maxnumdims = NULL,
  incrementby = 1, printprogress = TRUE)
}
\arguments{
\item{allx}{a data matrix containing all observations where rows are units and columns are covariates.}

\item{useasbases}{optional vector of 0/1 or FALSE/TRUE to specify what observations are to be used in forming bases (columns of the kernel matrix) balanced upon.  If the number of observations is under 2000, the default is to use all observations. When the number of observations is over 2000, the default is to use the sampled (control) units only.}

\item{b}{scaling factor in the calculation of gaussian kernel distance equivalent to the entire denominator \eqn{2\sigma^2} of the exponent.}

\item{sampled}{a numeric vector of length equal to the total number of units where sampled units take a value of 1 and population units take a value of 0.}

\item{sampledinpop}{a logical to be used in compination with input \code{sampled} that when \code{TRUE} indicates that sampled units should also be included in the target population.}

\item{treatment}{an alternative input to \code{sampled} and \code{sampledinpop} that is a numeric vector of length equal to the total number of units where population units take a value of 1 and sample units take a value of 0. Note that, current version only supports finding the ATT whihc implies \code{sampledinpop} is \code{FALSE}.}

\item{ebal.tol}{tolerance level used by \code{ebal::ebalance}.}

\item{numdims}{optional numeric argument to specify the number of dimensions of the kernel matrix to find balance on rather than searching for the number of dimensions which minimize the bias.}

\item{minnumdims}{optional numeric argument to specify the minimum number of dimensions of the SVD of the kernel matrix to find balance on in the search for the number of dimesions which minimize the bias. Default minimum is 1.}

\item{maxnumdims}{optional numeric argument to specify the maximum number of dimensions of the SVD of the kernel matrix to find balance on in the search for the number of dimesions which minimize the bias. While the number of observations is under 2000, the default maximum is the total number of observations. Due to the computation burden, when the number of observations is over 2000, the default is the number of sampled units.}

\item{incrementby}{optional argument to specify the number of dimesions to increase by from \code{minnumdims} to \code{maxnumdims} in each iteration of the search for the number of dimensions which minimizes the bias. Default is 1.}

\item{printprogress}{optional logical argument to print current number of dimensions and bias.}
}
\value{
\item{dist.record}{a numeric matrix recording the bias bound corresponding to balance on increasing dimesions of the SVD of the kernel matrix starting from \code{minnumdims} increasing by \code{incrementby} to \code{maxnumdims} or until the bias grows to be 1.25 times the minimal bias found.}
 \item{biasbound.orig}{the bias bound found when all sampled units have a weight of one over the number of sampled units and all target units have a weight of one over the number of target units.}
 \item{numdims}{the optimal number of dimensions of the SVD of the kernel matrix which minimizes the bias bound.}
 \item{w}{the weights found using entropy balancing on \code{numdims} dimensions of the SVD of the kernel matrix.}
 \item{biasbound.opt}{the minimal bias bound found using \code{numdims} as the number of dimestions of the SVD of the kernel matrix. When \code{numdims} is user-specified, the bias bound using this number of dimensions of the kernel matrix.}
\item{K}{the kernel matrix.}
}
\description{
Kernel balancing assumes the expectation of the non-treatment potential outcome conditional on the covariates falls in a large, flexible space of functions associated with a kernel. It then constructs linear bases for this function space and achieves approximate balance on these bases. This function implements kernel balancing using a gaussian kernel to expand the features of \eqn{X_i} to infinite dimensions.  It finds approximate mean balance for the control or sample group and treated group or target population in this expanded feature space by using the first \code{numdims} dimensions of the singular value decomposition of the gaussian kernel matrix. It employs entropy balancing to find the weights for each unit which produce this approximate balance. When \code{numdims} is not user-specified, it searches through increasing dimensions of the SVD of the kernel matrix to find the number of dimensions which produce weights that minimizes the worst-case bias bound with a given \code{hilbertnorm}. It then results these optimal weights, along with the minimized bias, the kernel matrix, a record of the number of dimensions used and the corresponding bais, as well as an original bias using naive group size weights for comparison.
}
\examples{
#Run Lalonde example at (new) defaults:
data(lalonde)
lalonde$nodegr=as.numeric(lalonde$educ<=11)
xvars=c("age","black","educ","hisp","married","re74","re75","nodegr","u74","u75")
#kbal at defaults:
kbalout= kbal(allx=lalonde[,xvars],
               useasbases=NULL, b=NULL,
               sampled=NULL, sampledinpop=FALSE,
               treatment=lalonde$nsw,
               ebal.tol=1e-6, numdims=NULL,
               minnumdims=NULL, maxnumdims=NULL,
               incrementby=1,
               printprogress =TRUE)
 summary(lm(re78~nsw,w=kbalout$w, data = lalonde))
 
#Rerun Lalonde example with settings as in the KBAL paper:
data(lalonde)
lalonde$nodegr=as.numeric(lalonde$educ<=11)
xvars=c("age","black","educ","hisp","married","re74","re75","nodegr","u74","u75")
#kbal at defaults:
kbalout.full= kbal(allx=lalonde[,xvars],
               useasbases=rep(1,nrow(lalonde)), b=NULL,
               sampled=NULL, sampledinpop=FALSE,
               treatment=lalonde$nsw,
               ebal.tol=1e-6, numdims=NULL,
               minnumdims=NULL, maxnumdims=NULL,
               incrementby=1,
               printprogress =TRUE)
 summary(lm(re78~nsw,w=kbalout.full$w, data = lalonde))  
}
